// MODULE top, AUTOMATICALLY GENERATED BY PYTHON

/**/
`default_nettype wire


module top (
  // rfsoc4x2: RFSoC4x2
    input pl_clk_n,
    input pl_clk_p,
    output mmcm_locked
  );




/*
  _____ _                   _     
 / ____(_)                 | |    
| (___  _  __ _ _ __   __ _| |___ 
 \___ \| |/ _` | '_ \ / _` | / __|
 ____) | | (_| | | | | (_| | \__ \ 
|_____/|_|\__, |_| |_|\__,_|_|___/
          __/ |                  
         |___/                   
*/
  // axi_protocol_converter: axi_protocol_converter0
  wire axil_clk;
  wire axil_rst_n;
  wire [31:0] test_board_id_in;
  wire [0:0] test_board_id_in_we;
  wire [31:0] test_clkcounter_in;
  wire [0:0] test_clkcounter_in_we;
  wire [31:0] test_rev_in;
  wire [0:0] test_rev_in_we;
  wire [31:0] test_rev_rcs_in;
  wire [0:0] test_rev_rcs_in_we;
  wire [31:0] test_scratchpad_out;
  wire [0:0] test_scratchpad_out_we;
  wire [31:0] test_software_register1_out;
  wire [0:0] test_software_register1_out_we;
  wire [31:0] test_software_register_in;
  wire [0:0] test_software_register_in_we;
  // rfsoc4x2: RFSoC4x2
  wire adc_clk;
  wire adc_clk180;
  wire adc_clk270;
  wire adc_clk90;
  // sw_reg: software_register
  wire [31:0] test_software_register_user_data_in;
  // sw_reg: software_register1
  wire [31:0] test_software_register1_user_data_out;
  // sys_block: RFSoC4x2
  wire [31:0] test_clkcounter_cdc;
  wire [0:0] test_clkcounter_we;
  wire user_rst;
  // xsg: RFSoC4x2
  (* keep = "true" *) wire sys_clk;
  (* keep = "true" *) wire user_clk;
  (* keep = "true" *) wire user_clk180;
  (* keep = "true" *) wire user_clk270;
  (* keep = "true" *) wire user_clk90;
  // zynq_usplus: zynq_usplus0
  wire [39:0] M_AXI_araddr;
  wire [2:0] M_AXI_arprot;
  wire M_AXI_arready;
  wire M_AXI_arvalid;
  wire [39:0] M_AXI_awaddr;
  wire [2:0] M_AXI_awprot;
  wire M_AXI_awready;
  wire M_AXI_awvalid;
  wire M_AXI_bready;
  wire [1:0] M_AXI_bresp;
  wire M_AXI_bvalid;
  wire [31:0] M_AXI_rdata;
  wire M_AXI_rready;
  wire [1:0] M_AXI_rresp;
  wire M_AXI_rvalid;
  wire [31:0] M_AXI_wdata;
  wire M_AXI_wready;
  wire [3:0] M_AXI_wstrb;
  wire M_AXI_wvalid;
  wire axil_arst_n;
  wire axil_rst;
  wire pl_sys_clk;

/*
  _____           _                            
 |_   _|         | |                           
   | |  _ __  ___| |_ __ _ _ __   ___ ___  ___ 
   | | | '_ \/ __| __/ _` | '_ \ / __/ _ \/ __|
  _| |_| | | \__ \ || (_| | | | | (_|  __/\__ \ 
 |_____|_| |_|___/\__\__,_|_| |_|\___\___||___/
*/
  // axi_protocol_converter: axi_protocol_converter0
  axi4lite_ic_wrapper  axi4lite_interconnect (
    .axi4lite_aclk(axil_clk),
    .axi4lite_aresetn(axil_rst_n),
    .axi4lite_sw_reg_software_register1_out(test_software_register1_out),
    .axi4lite_sw_reg_software_register1_out_we(test_software_register1_out_we),
    .axi4lite_sw_reg_software_register_in(test_software_register_in),
    .axi4lite_sw_reg_software_register_in_we(test_software_register_in_we),
    .axi4lite_sys_board_id_in(test_board_id_in),
    .axi4lite_sys_board_id_in_we(test_board_id_in_we),
    .axi4lite_sys_clkcounter_in(test_clkcounter_in),
    .axi4lite_sys_clkcounter_in_we(test_clkcounter_in_we),
    .axi4lite_sys_rev_in(test_rev_in),
    .axi4lite_sys_rev_in_we(test_rev_in_we),
    .axi4lite_sys_rev_rcs_in(test_rev_rcs_in),
    .axi4lite_sys_rev_rcs_in_we(test_rev_rcs_in_we),
    .axi4lite_sys_scratchpad_out(test_scratchpad_out),
    .axi4lite_sys_scratchpad_out_we(test_scratchpad_out_we),
    .s_axi4lite_araddr(M_AXI_araddr),
    .s_axi4lite_arready(M_AXI_arready),
    .s_axi4lite_arvalid(M_AXI_arvalid),
    .s_axi4lite_awaddr(M_AXI_awaddr),
    .s_axi4lite_awready(M_AXI_awready),
    .s_axi4lite_awvalid(M_AXI_awvalid),
    .s_axi4lite_bready(M_AXI_bready),
    .s_axi4lite_bresp(M_AXI_bresp),
    .s_axi4lite_bvalid(M_AXI_bvalid),
    .s_axi4lite_rdata(M_AXI_rdata),
    .s_axi4lite_rready(M_AXI_rready),
    .s_axi4lite_rresp(M_AXI_rresp),
    .s_axi4lite_rvalid(M_AXI_rvalid),
    .s_axi4lite_wdata(M_AXI_wdata),
    .s_axi4lite_wready(M_AXI_wready),
    .s_axi4lite_wstrb(M_AXI_wstrb),
    .s_axi4lite_wvalid(M_AXI_wvalid)
  );


  test_ip  test_ip_inst (
    .clk(user_clk),
    .test_software_register1_user_data_out(test_software_register1_user_data_out),
    .test_software_register_user_data_in(test_software_register_user_data_in)
  );

  // rfsoc4x2: RFSoC4x2
  zcu216_clk_infrastructure #(
    .DIVCLK(1),
    .DIVIDE(4.0),
    .MULTIPLY(8.0),
    .PERIOD(8.138)
  ) zcu216_clk_infr_inst (
    .adc_clk(adc_clk),
    .adc_clk180(adc_clk180),
    .adc_clk270(adc_clk270),
    .adc_clk90(adc_clk90),
    .mmcm_locked(mmcm_locked),
    .pl_clk_n(pl_clk_n),
    .pl_clk_p(pl_clk_p)
  );

  // sw_reg: software_register
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) test_software_register (
    .IP_BUS(test_software_register_user_data_in),
    .IP_BUS_VALID(1'b1),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(test_software_register_in)
  );

  // sw_reg: software_register1
  cdc_synchroniser #(
    .G_BUS_WIDTH(32),
    .G_OP_INITIAL_VAL(32'h0)
  ) test_software_register1 (
    .IP_BUS(test_software_register1_out),
    .IP_BUS_VALID(test_software_register1_out_we),
    .IP_CLK(user_clk),
    .IP_RESET(user_rst),
    .OP_BUS(test_software_register1_user_data_out)
  );

  // sys_block: RFSoC4x2
  cdc_synchroniser #(
    .G_BUS_WIDTH(32)
  ) sys_block_counter_cdc_inst (
    .IP_BUS(test_clkcounter_cdc),
    .IP_BUS_VALID(1'b1),
    .IP_CLK(axil_clk),
    .IP_RESET(axil_rst),
    .OP_BUS(test_clkcounter_in)
  );


  sys_block_counter #(
    .DATA_WIDTH(32)
  ) sys_block_counter_inst (
    .count_out(test_clkcounter_cdc),
    .en(1),
    .user_clk(user_clk),
    .user_rst(user_rst),
    .we(test_clkcounter_we)
  );

  // zynq_usplus: zynq_usplus0
  rfsoc4x2_bd  rfsoc4x2_bd_inst (
    .axil_arst_n(axil_arst_n),
    .axil_rst(axil_rst),
    .m_axi_araddr(M_AXI_araddr),
    .m_axi_arprot(M_AXI_arprot),
    .m_axi_arready(M_AXI_arready),
    .m_axi_arvalid(M_AXI_arvalid),
    .m_axi_awaddr(M_AXI_awaddr),
    .m_axi_awprot(M_AXI_awprot),
    .m_axi_awready(M_AXI_awready),
    .m_axi_awvalid(M_AXI_awvalid),
    .m_axi_bready(M_AXI_bready),
    .m_axi_bresp(M_AXI_bresp),
    .m_axi_bvalid(M_AXI_bvalid),
    .m_axi_rdata(M_AXI_rdata),
    .m_axi_rready(M_AXI_rready),
    .m_axi_rresp(M_AXI_rresp),
    .m_axi_rvalid(M_AXI_rvalid),
    .m_axi_wdata(M_AXI_wdata),
    .m_axi_wready(M_AXI_wready),
    .m_axi_wstrb(M_AXI_wstrb),
    .m_axi_wvalid(M_AXI_wvalid),
    .pl_sys_clk(pl_sys_clk)
  );


/*
                   _                                  _       
     /\           (_)                                | |      
    /  \   ___ ___ _  __ _ _ __  _ __ ___   ___ _ __ | |_ ___ 
   / /\ \ / __/ __| |/ _` | '_ \| '_ ` _ \ / _ \ '_ \| __/ __|
  / ____ \\__ \__ \ | (_| | | | | | | | | |  __/ | | | |_\__ \ 
 /_/    \_\___/___/_|\__, |_| |_|_| |_| |_|\___|_| |_|\__|___/
                      __/ |                                   
                     |___/                                    
*/
  // rfsoc4x2: RFSoC4x2
  assign axil_clk = pl_sys_clk;
  assign axil_rst_n = axil_arst_n;
  assign sys_clk = pl_sys_clk;
  assign sys_rst = ~axil_arst_n;
  // xsg: RFSoC4x2
  assign user_clk = adc_clk;
  assign user_clk180 = adc_clk180;
  assign user_clk270 = adc_clk270;
  assign user_clk90 = adc_clk90;


endmodule